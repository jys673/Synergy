		    Synergy V3.0+ Evaluation Release
                     Example Synergy Applications

			(c)Temple University
			    Feburary 1995
			  Revised Feburary 2013

The applications are packaged in a single apps.tar.gz file. Uncompressed, there are three subdirectories here:

1) PML Examples -- These are automated sequential-parallel program generation examples using PML (Parallel Markup Language)
	init		-- an initial testing program
	laplace		-- a Laplace solver example
	labsig		-- a Laplace signature processing example
	LUFactor	-- an LU factorization example
	uqueen		-- an N-Queens recursive parallel program generation example
	real 		-- a parallel matrix multiplication example
	tspar		-- a recursive Traveling Sales Person problem solver example
	possibilities   -- future possibilities ...

2) ssc -- Solution space compact rograms (no superlinear speedup potentials)
	fractal 	-- a parallel Mandelbrot system,
				an ideal testbed for load balancing algorithms.
	xepp		-- a parallel interactive Mandelbrot system,
				a program transplanted from PVM.
	matrix		-- a parallel matrix multiplication system. (Tested in 2013)
	gauss		-- a parallel linear solver using Gaussian Elimination,
				a demo of complex program-to-program 
				synchronization and communication using 
				multiple tuple space objects.
	nqueen		-- a parallel N-Queen solver,
				a deterministic recursive program example.
	laplace		-- a parallel heat transfer simulation program using
				a relaxed fixed point algorithm.
	raytrace	-- a parallel ray tracer using POV and Synergy.
	albm		-- a matrix multiplication example. This program
				can automatically balance the fluctuating
				work loads of heterogeneous processors
				delivering near optimal speedup.

3) nssc -- Non-solution space compact programs (these applications can generate superlinear speedups)
	msort 		-- a parallel C mergesort system, a demonstration of pipe usage.
	knapsack	-- a parallel 0/1 knapsack decision solver (NP-complete). 
	subsetsum	-- a parallel sum of subsets solver (NP-complete).
	tsppar          -- a parallel Traveling Salesman decision solver (NP-complete).

Note:
  These examples are projects from CIS undergraduate and graduate students' projects. They are only rudimentally tested. The
idea is to show how to compose data parallel applications that can leverage the Statistic Multiplexed Computing architecture.
Please report any problems and comments to shi@temple.edu.
